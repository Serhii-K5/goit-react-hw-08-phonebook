{"version":3,"file":"static/js/907.b591bbc2.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js","webpack://goit-react-hw-08-phonebook/./src/styles/styles.module.css?2744"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;","// import propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n  const dispatch = useDispatch();\n  const items = useSelector(getContacts);\n  \n  const handleChangeName = evt => {\n    const {value} = evt.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = evt => {\n    const {value} = evt.target;\n    setNumber(value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const contactsLists = [...items];\n    if (contactsLists.findIndex(contact => name === contact.name) !== -1) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n      setName('');\n      setNumber('');\n    }\n\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      {/* <label className={css.formLabel}>Name </label> */}\n      <p className={css.formLabel}>Name</p>\n      <label> \n        <input\n          className={css.formName}\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required          \n          onChange={handleChangeName}          \n          value={name}\n          placeholder=\"Enter name\"\n        />\n      </label>\n\n      <label>\n        <p className={css.formLabel}>Number</p>\n        <input\n          className={css.formNumber}\n          type=\"tel\"\n          name=\"number\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChangeNumber}\n          value={number}\n          placeholder=\"Enter phone number\"\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// ContactForm.propTypes = {\n//   handleSubmit: propTypes.func.isRequired,\n//   name: propTypes.string,\n//   number: propTypes.number,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"contactDeleteBtn\":\"ContactList_contactDeleteBtn__+MpkC\",\"contactBox\":\"ContactList_contactBox__yvLZ6\"};","// import propTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(deleteContact(id));\n  \n  return (\n    <ul style={{overflowY: 'clip'}}>\n      {visibleContacts.map((contact, id) => (\n        <li key={id} className={css.contactListItem}>\n          <div className={css.contactBox}>\n            <div>\n              {contact.name}: {contact.number}\n            </div>          \n            <button\n              type=\"button\"\n              className={css.contactDeleteBtn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n              <span class=\"material-symbols-outlined\">delete</span>\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>    \n  )\n};\n\n// ContactList.propTypes = {\n//   contacts: propTypes.arrayOf(\n//     propTypes.exact({\n//       id: propTypes.string.isRequired,\n//       name: propTypes.string.isRequired,\n//       number: propTypes.string.isRequired,\n//     })\n//   ),\n//   handleDelete: propTypes.func.isRequired,\n// };","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"filterName\":\"Filter_filterName__Y2kKA\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","// import propTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = evt => {\n    dispatch(setFilter(evt.target.value));\n  };\n\n  return (\n    <div style={{textAlign: 'center'}}>\n      <label className={css.filterLabel}>Find contacts by Name </label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\n// Filter.propTypes = {\n//   filter: propTypes.string.isRequired,\n//   handleChange: propTypes.func.isRequired,\n// };","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\nimport css from 'styles/styles.module.css';\n\nimport { SheetFooter } from 'components/SheetFooter/SheetFooter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.containerContacts}>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n      <SheetFooter />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__TzhHz\",\"containerPhonebookStyles\":\"styles_containerPhonebookStyles__et0GG\",\"containerContacts\":\"styles_containerContacts__LM76c\",\"sectionContacts\":\"styles_sectionContacts__58HXB\",\"notepadSpring\":\"styles_notepadSpring__gEUtj\",\"phonebookCover\":\"styles_phonebookCover__eU1Vv\"};"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","form","currentTarget","findIndex","contact","alert","addContact","reset","type","pattern","title","required","onChange","evt","value","target","placeholder","ContactList","visibleContacts","toLowerCase","includes","getVisibleContacts","style","overflowY","map","id","onClick","deleteContact","handleDelete","class","Filter","textAlign","setFilter","Contacts","useEffect","fetchContacts","Helmet","SheetFooter"],"sourceRoot":""}